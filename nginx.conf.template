# This file becomes /etc/nginx/conf.d/default.conf
# See template-port-env-subst.sh 

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen ${CYBER_DOJO_NGINX_PORT};
  server_name localhost;

  # Use Docker embedded DNS server at 127.0.0.11 if running locally
  # https://stackoverflow.com/questions/35744650/docker-network-nginx-resolver
  resolver ${NGINX_RESOLVER_IP};

  # Path for static files
  root /usr/share/nginx/html;

  client_max_body_size 1G;

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Home page redirects...

  rewrite ^/$              /creator/home permanent;
  rewrite ^/dojo/index(.*) /creator/home permanent;

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Read-Eval-Print-Loop service (uses web-sockets)

  set $repler_hostname ${CYBER_DOJO_REPLER_HOSTNAME}; 

  location /repler/ {
    proxy_pass http://$repler_hostname:${CYBER_DOJO_REPLER_PORT}/repl/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # favicon.ico is in images/ dir for tidyness.

  location = /favicon.ico {
    root /usr/share/nginx/html/images;
  }
  rewrite ^/assets/favicon-(.*).ico /usr/share/nginx/html/images/favicon.ico permanent;

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Microservices

  # Set services hostnames to force re-resolution of the DNS names
  # https://medium.com/driven-by-code/dynamic-dns-resolution-in-nginx-22133c22e3ab
  set $creator_hostname ${CYBER_DOJO_CREATOR_HOSTNAME};
  set $saver_hostname ${CYBER_DOJO_SAVER_HOSTNAME};
  set $dashboard_hostname ${CYBER_DOJO_DASHBOARD_HOSTNAME};
  set $differ_hostname ${CYBER_DOJO_DIFFER_HOSTNAME};
  set $custom_start_points_hostname ${CYBER_DOJO_CUSTOM_START_POINTS_HOSTNAME};
  set $exercises_start_points_hostname ${CYBER_DOJO_EXERCISES_START_POINTS_HOSTNAME};
  set $languages_start_points_hostname ${CYBER_DOJO_LANGUAGES_START_POINTS_HOSTNAME};
  set $shas_hostname ${CYBER_DOJO_SHAS_HOSTNAME};
  set $runner_hostname ${CYBER_DOJO_RUNNER_HOSTNAME};
  set $repler_hostname ${CYBER_DOJO_REPLER_HOSTNAME};
  set $web_hostname ${CYBER_DOJO_WEB_HOSTNAME};

  location /creator/ {
    rewrite ^/creator/(.*) /$1 break;
    proxy_pass http://$creator_hostname:${CYBER_DOJO_CREATOR_PORT};
  }

  location /saver/ {
    rewrite ^/saver/(.*) /$1 break;
    proxy_pass http://$saver_hostname:${CYBER_DOJO_SAVER_PORT};
  }

  location /dashboard/ {
    rewrite ^/dashboard/(.*) /$1 break;
    proxy_pass http://$dashboard_hostname:${CYBER_DOJO_DASHBOARD_PORT};
  }

  location /differ/ {
    rewrite ^/differ/(.*) /$1 break;
    proxy_pass http://$differ_hostname:${CYBER_DOJO_DIFFER_PORT};
  }

  location /custom-start-points/ {
    rewrite ^/custom-start-points/(.*) /$1 break;
    proxy_pass http://$custom_start_points_hostname:${CYBER_DOJO_CUSTOM_START_POINTS_PORT};
  }
  
  location /exercises-start-points/ {
    rewrite ^/exercises-start-points/(.*) /$1 break;
    proxy_pass http://$exercises_start_points_hostname:${CYBER_DOJO_EXERCISES_START_POINTS_PORT};
  }
  
  location /languages-start-points/ {
    rewrite ^/languages-start-points/(.*) /$1 break;
    proxy_pass http://$languages_start_points_hostname:${CYBER_DOJO_LANGUAGES_START_POINTS_PORT};
  }

  location /shas {
    rewrite ^/shas/(.*) /$1 break;
    proxy_pass http://$shas_hostname:${CYBER_DOJO_SHAS_PORT};
  }

  location /repler {
    rewrite ^/repler/(.*) /$1 break;
    proxy_pass http://$repler_hostname:${CYBER_DOJO_REPLER_PORT};
  }

  location /runner/sha {
    rewrite ^/runner/sha /sha break;
    proxy_pass http://$runner_hostname:${CYBER_DOJO_RUNNER_PORT};
  }

  #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # For everything else try a static file, otherwise try web.

  location /  {
    # An HTTP header important enough to have its own Wikipedia entry:
    # http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Help Rack set the proper protocol (eg https) for doing redirects:
    proxy_set_header X-Forwarded-Proto $scheme;

    # Pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # We don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    # Try to serve static files from nginx.
    if (!-f $request_filename) {
      proxy_pass http://$web_hostname:${CYBER_DOJO_WEB_PORT};
      break;
    }
  }

}
